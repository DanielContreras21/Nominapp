server:
  port: 8082

spring:
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST}/${EMPLOYEE_DB}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
  application:
    name: Employee

eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://eureka:password@localhost:8761/eureka

management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: healt

  endpoint:
    health:
      show-details: always

resilience4j:
  circuitbreaker:
    instances:
      getEmployeeBreaker:
        register-health-indicator: true
        event-consumer-buffer-size: 10
        failure-rate-threshold: 50
        minimum-number-of-calls: 5
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 6s
        permitted-number-of-calls-in-half-open-state: 3
        sliding-window-size: 10
        sliding-window-type: COUNT_BASED
  retry:
    instances:
      getEmployeeService:
        max-attempts: 3
        wait-duration: 5s

  kafka:
    bootstrap-servers: localhost:8092





